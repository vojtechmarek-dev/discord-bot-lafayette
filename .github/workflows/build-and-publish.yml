name: Create, publish Docker image, and Deploy Commands

on:
  push:
    branches:
      - 'main'
      - 'release' # Trigger on pushes to 'main' AND 'release'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=release,enable=${{ github.ref == 'refs/heads/release' }}

      - name: Build and push Docker image for multiple platforms
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  deploy-slash-commands:
    runs-on: ubuntu-latest
    # This job should only run on pushes to the 'release' branch
    if: github.ref == 'refs/heads/release'
    # This job needs the build-and-push-image job to complete (optional, but good if image build is a prerequisite)
    # needs: build-and-push-image # Uncomment if deploying commands should wait for image build
    permissions:
      contents: read # To checkout the code
    env:
      # Pass secrets needed by deploy-commands.ts as environment variables
      # These secrets must be configured in your GitHub repository settings
      # (Settings > Secrets and variables > Actions > New repository secret)
      DISCORD_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }} # Ensure secret name matches
      CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}   # Ensure secret name matches
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Or your project's Node.js version
          cache: 'npm' # Or 'yarn'

      - name: Install dependencies
        run: npm ci # Or yarn install --frozen-lockfile

      - name: Run deploy-commands.ts script
        run: npm run deploy:commands # Make sure this script exists in your package.json
                                   # e.g., "deploy:commands": "tsx deploy-commands.ts"
        # If GUILD_ID is sometimes empty for global deploy, your script should handle it
        # For global deployment, ensure deploy-commands.ts uses applicationCommands if GUILD_ID is not set