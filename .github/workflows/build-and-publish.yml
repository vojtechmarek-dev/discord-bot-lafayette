name: Create and publish a Docker image

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # This will be something like "YourUsername/YourRepoName"

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU # Important for cross-platform builds
        uses: docker/setup-qemu-action@v3 # Use latest version

      - name: Set up Docker Buildx # Important for multi-platform builds
        uses: docker/setup-buildx-action@v3 # Use latest version

      - name: Log in to the Container registry
        uses: docker/login-action@v3 # Use latest version
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5 # Use latest version
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Add tagging strategy, e.g., type=sha for commit SHA, type=ref for branch/tag names
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image for multiple platforms
        id: push
        uses: docker/build-push-action@v6 # Use latest version
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha # Optional: Enable build cache from GitHub Actions
          cache-to: type=gha,mode=max # Optional: Enable build cache to GitHub Actions

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1 # Updated to v1 as v2 is for SLSA v1.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true